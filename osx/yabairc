#!/usr/bin/env zsh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa
yabai -m config debug_output on

# bar settings
# yabai -m config top_padding 0
#yabai -m config external_bar all:20:20


# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          off # autofocus / autoraise / on / off

# auto tile windows to the side
yabai -m config window_placement             second_child
# make floating windows stay on top
# yabai -m config window_topmost               on
yabai -m config window_topmost               off

yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow                on

yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# Mouse support
yabai -m config mouse_modifier               alt
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       float
# yabai -m config bottom_padding               0
# yabai -m config left_padding                 0
# yabai -m config right_padding                0
# yabai -m config window_gap                   0

# float system preferences
yabai -m rule --add app='^System Information$' manage=off
yabai -m rule --add app='^System Preferences$' manage=off
yabai -m rule --add title='Preferences$' manage=off

# float settings windows
yabai -m rule --add title='Settings$' manage=off

# Some Goland settings, in case you are using it. float Goland Preference panes
# yabai -m rule --add app='Goland IDEA' title='^$' manage=off
# yabai -m rule --add app='Goland IDEA' title='Project Structure' manage=off
# yabai -m rule --add app='Goland IDEA' title='Preferences' manage=off
# yabai -m rule --add app='Goland IDEA' title='Edit configuration' manage=off

# float apps
# yabai -m rule --add app='^Feishu$' manage=off
# yabai -m rule --add app='^WeChat$' manage=off
# yabai -m rule --add app='^YoudaoDict$' manage=off
# yabai -m rule --add app='^NeteaseMusic$' manage=off
# yabai -m rule --add app='^Mail$' manage=off
# yabai -m rule --add app='^iTerm2$' manage=off
# yabai -m rule --add app='^IntelliJ' manage=off

# FROM: https://github.com/koekeishiya/yabai/issues/485#issuecomment-617953545
# If no window on the current space is focused after a window is destroyed or
# minimized, or an application is hidden, focus the window under the cursor.
yabai -m signal --add event=window_destroyed \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=window_minimized \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=application_hidden \
  action="${functions[focus_under_cursor]}"

function focus_under_cursor {
  if yabai -m query --windows --space |
      jq -er 'map(select(.focused == 1)) | length == 0' >/dev/null; then
    yabai -m window --focus mouse 2>/dev/null || true
  fi
}

echo "yabai configuration loaded.."
